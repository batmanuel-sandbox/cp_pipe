<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config" kind="class" language="Python" prot="public">
    <compoundname>lsst::ip::cpp::cppTask::CppTaskConfig</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Config</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8b75e61970a323136e479803c56b0471" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::fe55</definition>
        <argsstring></argsstring>
        <name>fe55</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.Fe55Task,
        doc=&quot;The eotest Fe55 analysis task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="44" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a3f8c4a2732659672d4ae37a0693608f0" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doFe55</definition>
        <argsstring></argsstring>
        <name>doFe55</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the Fe55 task to measure gains?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="48" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a60c397193ecdf73229a13f6ce8473185" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::readNoise</definition>
        <argsstring></argsstring>
        <name>readNoise</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.ReadNoiseTask,
        doc=&quot;The eotest read noise task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="53" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a7bd2444dd1ed12a7217a0fbbd275de97" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doReadNoise</definition>
        <argsstring></argsstring>
        <name>doReadNoise</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the readNoiseTask to measure read noise?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="57" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2968d0479d3c184a0e0d2925044156cf" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::brightPixels</definition>
        <argsstring></argsstring>
        <name>brightPixels</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.BrightPixelsTask,
        doc=&quot;The eotest bright pixel/column finding task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="62" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a02723c2a690cc9e3d2203db19eb6cf7b" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doBrightPixels</definition>
        <argsstring></argsstring>
        <name>doBrightPixels</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the brightPixelTask to find the bright pixels?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="66" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a549b053e071cc594f0338c4c04a88879" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::darkPixels</definition>
        <argsstring></argsstring>
        <name>darkPixels</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.DarkPixelsTask,
        doc=&quot;The eotest dark pixel/column finding task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="71" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1abcabb3115e8d9cf3ea6e7f54d0789822" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doDarkPixels</definition>
        <argsstring></argsstring>
        <name>doDarkPixels</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the darkPixelsTask to find the dark pixels?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="75" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ada74ff4e1e1bdf73648033032aa61423" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::traps</definition>
        <argsstring></argsstring>
        <name>traps</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.TrapTask,
        doc=&quot;The eotest trap-finding task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="80" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2cd8efb608d338ec3c0c612d10538071" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doTraps</definition>
        <argsstring></argsstring>
        <name>doTraps</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the trapTask to find the <ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ada74ff4e1e1bdf73648033032aa61423" kindref="member">traps</ref>?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="84" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8df3d67fe41621b2d0bb4295a4980374" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::cte</definition>
        <argsstring></argsstring>
        <name>cte</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.CteTask,
        doc=&quot;The eotest CTE analysis task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="89" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1aa8654d55b8236e14988a85d7623ff7b8" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doCTE</definition>
        <argsstring></argsstring>
        <name>doCTE</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the CTE task to measure the CTE?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="93" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a159b39d7d8fe34bf84564fe068c2bd64" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::ptc</definition>
        <argsstring></argsstring>
        <name>ptc</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.PtcTask,
        doc=&quot;The eotest PTC analysis task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="98" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a690129914caddc552a28ba5e80e58465" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doPTC</definition>
        <argsstring></argsstring>
        <name>doPTC</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the PTC task to measure the photon transfer curve?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="102" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ab0dd2467832d6dbe62d3d7eb0f38e119" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::flatPair</definition>
        <argsstring></argsstring>
        <name>flatPair</name>
        <initializer>=  pexConfig.ConfigurableField(
        target=sensorTest.FlatPairTask,
        doc=&quot;The eotest flat-pair analysis task. Should not be retragetted.&quot;,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="107" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a6a7c8d9875e45682affcafa403d58e73" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::doFlatPair</definition>
        <argsstring></argsstring>
        <name>doFlatPair</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;Run the <ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ab0dd2467832d6dbe62d3d7eb0f38e119" kindref="member">flatPair</ref> task?&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="111" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2d07540cb5884457210730e1f0c67e79" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::requireAllEOTests</definition>
        <argsstring></argsstring>
        <name>requireAllEOTests</name>
        <initializer>=  pexConfig.Field(
        dtype=bool,
        doc=&quot;If True, all tests are required to be runnable, and will Raise if data is missing. If False, &quot;
        &quot;processing will continue if a previous part failed due to the input dataset being incomplete.&quot;,
        default=True,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="116" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a9def744f1a34ba1d5a9af0b0aa56ac42" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst.ip.cpp.cppTask.CppTaskConfig::flatPairMaxPdFracDev</definition>
        <argsstring></argsstring>
        <name>flatPairMaxPdFracDev</name>
        <initializer>=  pexConfig.Field(
        dtype=float,
        doc=&quot;Maximum allowed fractional deviation between photodiode currents for the eotest <ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ab0dd2467832d6dbe62d3d7eb0f38e119" kindref="member">flatPair</ref> task. &quot;
        &quot;This value is passed to the task&apos;s <ref refid="namespacelsst_1_1utils_1_1tests_1a6a7d1841d3979bcf26ebc9c817ebe282" kindref="member" external="/ssd/lsstsw/stack3_20171021/stack/miniconda3-4.3.21-10a4fa6/Linux64/utils/14.0-4-gac01bb5+2/doc/utils.tag">run</ref>() method at runtime rather than being stored in the task&apos;s&quot;
        &quot;own pexConfig field.&quot;,
        default=0.05,
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="122" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8d9857441a713631dc7856cd50ee0aa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ip.cpp.cppTask.CppTaskConfig.setDefaults</definition>
        <argsstring>(self)</argsstring>
        <name>setDefaults</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set default config options for the subTasks.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/cpp/cppTask.py" line="130" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="130" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Config class for the calibration products production (CPP) task.</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>lsst.ip.cpp.cppTask.CppTaskConfig</label>
        <link refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>pexConfig::Config</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>lsst.ip.cpp.cppTask.CppTaskConfig</label>
        <link refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>pexConfig::Config</label>
      </node>
    </collaborationgraph>
    <location file="python/lsst/ip/cpp/cppTask.py" line="41" column="1" bodyfile="python/lsst/ip/cpp/cppTask.py" bodystart="41" bodyend="166"/>
    <listofallmembers>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2968d0479d3c184a0e0d2925044156cf" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>brightPixels</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8df3d67fe41621b2d0bb4295a4980374" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>cte</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a549b053e071cc594f0338c4c04a88879" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>darkPixels</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a02723c2a690cc9e3d2203db19eb6cf7b" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doBrightPixels</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1aa8654d55b8236e14988a85d7623ff7b8" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doCTE</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1abcabb3115e8d9cf3ea6e7f54d0789822" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doDarkPixels</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a3f8c4a2732659672d4ae37a0693608f0" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doFe55</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a6a7c8d9875e45682affcafa403d58e73" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doFlatPair</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a690129914caddc552a28ba5e80e58465" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doPTC</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a7bd2444dd1ed12a7217a0fbbd275de97" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doReadNoise</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2cd8efb608d338ec3c0c612d10538071" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>doTraps</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8b75e61970a323136e479803c56b0471" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>fe55</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ab0dd2467832d6dbe62d3d7eb0f38e119" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>flatPair</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a9def744f1a34ba1d5a9af0b0aa56ac42" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>flatPairMaxPdFracDev</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a159b39d7d8fe34bf84564fe068c2bd64" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>ptc</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a60c397193ecdf73229a13f6ce8473185" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>readNoise</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2d07540cb5884457210730e1f0c67e79" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>requireAllEOTests</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8d9857441a713631dc7856cd50ee0aa9" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>setDefaults</name></member>
      <member refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ada74ff4e1e1bdf73648033032aa61423" prot="public" virt="non-virtual"><scope>lsst::ip::cpp::cppTask::CppTaskConfig</scope><name>traps</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
