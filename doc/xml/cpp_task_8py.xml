<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cpp_task_8py" kind="file" language="Python">
    <compoundname>cppTask.py</compoundname>
    <innerclass refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config" prot="public">lsst::ip::cpp::cppTask::CppTaskConfig</innerclass>
    <innerclass refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task" prot="public">lsst::ip::cpp::cppTask::CppTask</innerclass>
    <innernamespace refid="namespacelsst_1_1ip_1_1cpp_1_1cpp_task">lsst::ip::cpp::cppTask</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelsst_1_1ip_1_1cpp_1_1cpp_task" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LSST<sp/>Data<sp/>Management<sp/>System</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2008-2017<sp/><sp/>AURA/LSST.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LSST<sp/>Project<sp/>(http://www.lsst.org/).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>LSST<sp/>License<sp/>Statement<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>see<sp/>&lt;https://www.lsstcorp.org/LegalNotices/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>import<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>import<sp/>numpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Calibration<sp/>products<sp/>production<sp/>task<sp/>code.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import,<sp/>division,<sp/>print_function</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lsst.pex.config<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pexConfig</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lsst.pipe.base<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pipeBase</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lsst.daf.base<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>dafBase</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">#<sp/>despite<sp/>living<sp/>inside<sp/>the<sp/>lsst<sp/>namespace<sp/>this<sp/>is<sp/>not<sp/>a<sp/>standard<sp/>lsst<sp/>package</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lsst.eotest.sensor<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sensorTest</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Error<sp/>importing<sp/>eotest&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>glob</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config" kindref="compound">CppTaskConfig</ref>(pexConfig.Config):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Config<sp/>class<sp/>for<sp/>the<sp/>calibration<sp/>products<sp/>production<sp/>(CPP)<sp/>task.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8b75e61970a323136e479803c56b0471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>fe55<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.Fe55Task,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>Fe55<sp/>analysis<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="48" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a3f8c4a2732659672d4ae37a0693608f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doFe55<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>Fe55<sp/>task<sp/>to<sp/>measure<sp/>gains?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="53" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a60c397193ecdf73229a13f6ce8473185" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>readNoise<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.ReadNoiseTask,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>read<sp/>noise<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="57" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a7bd2444dd1ed12a7217a0fbbd275de97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doReadNoise<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>readNoiseTask<sp/>to<sp/>measure<sp/>read<sp/>noise?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="62" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2968d0479d3c184a0e0d2925044156cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>brightPixels<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.BrightPixelsTask,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>bright<sp/>pixel/column<sp/>finding<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="66" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a02723c2a690cc9e3d2203db19eb6cf7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doBrightPixels<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>brightPixelTask<sp/>to<sp/>find<sp/>the<sp/>bright<sp/>pixels?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="71" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a549b053e071cc594f0338c4c04a88879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>darkPixels<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.DarkPixelsTask,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>dark<sp/>pixel/column<sp/>finding<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="75" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1abcabb3115e8d9cf3ea6e7f54d0789822" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doDarkPixels<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>darkPixelsTask<sp/>to<sp/>find<sp/>the<sp/>dark<sp/>pixels?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="80" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ada74ff4e1e1bdf73648033032aa61423" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>traps<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.TrapTask,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>trap-finding<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="84" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2cd8efb608d338ec3c0c612d10538071" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doTraps<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>trapTask<sp/>to<sp/>find<sp/>the<sp/>traps?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="89" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8df3d67fe41621b2d0bb4295a4980374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cte<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.CteTask,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>CTE<sp/>analysis<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="93" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1aa8654d55b8236e14988a85d7623ff7b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doCTE<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>CTE<sp/>task<sp/>to<sp/>measure<sp/>the<sp/>CTE?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="98" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a159b39d7d8fe34bf84564fe068c2bd64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ptc<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.PtcTask,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>PTC<sp/>analysis<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="102" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a690129914caddc552a28ba5e80e58465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doPTC<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>PTC<sp/>task<sp/>to<sp/>measure<sp/>the<sp/>photon<sp/>transfer<sp/>curve?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="107" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ab0dd2467832d6dbe62d3d7eb0f38e119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>flatPair<sp/>=<sp/>pexConfig.ConfigurableField(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target=sensorTest.FlatPairTask,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;The<sp/>eotest<sp/>flat-pair<sp/>analysis<sp/>task.<sp/>Should<sp/>not<sp/>be<sp/>retragetted.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="111" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a6a7c8d9875e45682affcafa403d58e73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>doFlatPair<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>flatPair<sp/>task?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="116" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2d07540cb5884457210730e1f0c67e79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>requireAllEOTests<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;If<sp/>True,<sp/>all<sp/>tests<sp/>are<sp/>required<sp/>to<sp/>be<sp/>runnable,<sp/>and<sp/>will<sp/>Raise<sp/>if<sp/>data<sp/>is<sp/>missing.<sp/>If<sp/>False,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;processing<sp/>will<sp/>continue<sp/>if<sp/>a<sp/>previous<sp/>part<sp/>failed<sp/>due<sp/>to<sp/>the<sp/>input<sp/>dataset<sp/>being<sp/>incomplete.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="122" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a9def744f1a34ba1d5a9af0b0aa56ac42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>flatPairMaxPdFracDev<sp/>=<sp/>pexConfig.Field(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=float,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Maximum<sp/>allowed<sp/>fractional<sp/>deviation<sp/>between<sp/>photodiode<sp/>currents<sp/>for<sp/>the<sp/>eotest<sp/>flatPair<sp/>task.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>value<sp/>is<sp/>passed<sp/>to<sp/>the<sp/>task&apos;s<sp/>run()<sp/>method<sp/>at<sp/>runtime<sp/>rather<sp/>than<sp/>being<sp/>stored<sp/>in<sp/>the<sp/>task&apos;s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;own<sp/>pexConfig<sp/>field.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=0.05,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8d9857441a713631dc7856cd50ee0aa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8d9857441a713631dc7856cd50ee0aa9" kindref="member">setDefaults</ref>(self):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Set<sp/>default<sp/>config<sp/>options<sp/>for<sp/>the<sp/>subTasks.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Set<sp/>to<sp/>proper<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8b75e61970a323136e479803c56b0471" kindref="member">fe55</ref>.temp_set_point<sp/>=<sp/>-100</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8b75e61970a323136e479803c56b0471" kindref="member">fe55</ref>.temp_set_point_tol<sp/>=<sp/>20</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Set<sp/>to<sp/>proper<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a60c397193ecdf73229a13f6ce8473185" kindref="member">readNoise</ref>.temp_set_point<sp/>=<sp/>-100</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a60c397193ecdf73229a13f6ce8473185" kindref="member">readNoise</ref>.temp_set_point_tol<sp/>=<sp/>20</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>make<sp/>this<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2968d0479d3c184a0e0d2925044156cf" kindref="member">brightPixels</ref>.temp_set_point<sp/>=<sp/>-100</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2968d0479d3c184a0e0d2925044156cf" kindref="member">brightPixels</ref>.temp_set_point_tol<sp/>=<sp/>20</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>find<sp/>the<sp/>proper<sp/>settings<sp/>for<sp/>flatPairTask<sp/>to<sp/>work.<sp/>This<sp/>will<sp/>mean<sp/>either<sp/>using<sp/>the<sp/>expTime,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>working<sp/>out<sp/>what&apos;s<sp/>wrong<sp/>with<sp/>the<sp/>MONDIODE<sp/>values<sp/>(debug<sp/>that<sp/>anyway<sp/>as<sp/>a<sp/>large<sp/>difference<sp/>might</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>indicate<sp/>something<sp/>else<sp/>going<sp/>on).<sp/>Note<sp/>that<sp/>this<sp/>task<sp/>doesn&apos;t<sp/>really<sp/>use<sp/>much<sp/>in<sp/>its<sp/>config<sp/>class,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>but<sp/>passes<sp/>in<sp/>things<sp/>at<sp/>runtime<sp/>param<sp/>to<sp/>its<sp/>run()<sp/>method,<sp/>hence<sp/>putting<sp/>in<sp/>a<sp/>slot<sp/>for<sp/>them<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a9def744f1a34ba1d5a9af0b0aa56ac42" kindref="member">flatPairMaxPdFracDev</ref><sp/>=<sp/>0.99</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>REMOVE<sp/>THIS<sp/>HACK!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>this<sp/>is<sp/>tricky,<sp/>as<sp/>these<sp/>are<sp/>frozen,<sp/>but<sp/>we<sp/>don&apos;t<sp/>have<sp/>the<sp/>path,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>the<sp/>means<sp/>to<sp/>find<sp/>it<sp/>out<sp/>until<sp/>runEotestDirect()<sp/>is<sp/>called,<sp/>because<sp/>we<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>from<sp/>the<sp/>butler.<sp/>This<sp/>is<sp/>a<sp/>question<sp/>for<sp/>stack<sp/>architecture<sp/>experts,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>but<sp/>has<sp/>been<sp/>confirmed<sp/>as<sp/>non-trivial<sp/>to<sp/>fix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_outdir<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;/home/mfl/comCam_repo_rtm5/eotest_output&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8b75e61970a323136e479803c56b0471" kindref="member">fe55</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a2968d0479d3c184a0e0d2925044156cf" kindref="member">brightPixels</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a549b053e071cc594f0338c4c04a88879" kindref="member">darkPixels</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a60c397193ecdf73229a13f6ce8473185" kindref="member">readNoise</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ada74ff4e1e1bdf73648033032aa61423" kindref="member">traps</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a8df3d67fe41621b2d0bb4295a4980374" kindref="member">cte</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1ab0dd2467832d6dbe62d3d7eb0f38e119" kindref="member">flatPair</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_config_1a159b39d7d8fe34bf84564fe068c2bd64" kindref="member">ptc</ref>.output_dir<sp/>=<sp/>_outdir</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task" kindref="compound">CppTask</ref>(pipeBase.CmdLineTask):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Calibration<sp/>Products<sp/>Production<sp/>(CPP)<sp/>task.</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>task<sp/>is<sp/>used<sp/>to<sp/>produce<sp/>the<sp/>calibration<sp/>products<sp/>required<sp/>to<sp/>calibrate<sp/>cameras.</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Examples<sp/>of<sp/>such<sp/>operations<sp/>are<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>a<sp/>set<sp/>of<sp/>flat-field<sp/>images,<sp/>find<sp/>the<sp/>dark<sp/>pixels<sp/>and<sp/>columns.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>a<sp/>set<sp/>of<sp/>darks,<sp/>find<sp/>the<sp/>bright<sp/>pixels<sp/>and<sp/>columns.</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>a<sp/>set<sp/>of<sp/>Fe55<sp/>exposures,<sp/>calulate<sp/>the<sp/>gain<sp/>of<sp/>the<sp/>readout<sp/>chain,<sp/>in<sp/>e-/ADU</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>a<sp/>set<sp/>of<sp/>Fe55<sp/>exposures,<sp/>calulate<sp/>the<sp/>instrinsic<sp/>PSF<sp/>of<sp/>the<sp/>silicon,<sp/>and<sp/>the<sp/>degradation<sp/>of</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>PSF<sp/>due<sp/>to<sp/>CTE.</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>a<sp/>set<sp/>of<sp/>flat-pairs,<sp/>measure<sp/>the<sp/>photon<sp/>transfer<sp/>curve<sp/>(PTC).</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>a<sp/>set<sp/>of<sp/>bias<sp/>frames,<sp/>calculate<sp/>the<sp/>read<sp/>noise<sp/>of<sp/>the<sp/>system<sp/>in<sp/>e-.</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>a<sp/>set<sp/>of<sp/>pocket-pumping<sp/>exposures,<sp/>find<sp/>charge-traps<sp/>in<sp/>the<sp/>silicon.</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>CppTask.runEotestDirect()<sp/>is<sp/>only<sp/>applicable<sp/>to<sp/>LSST<sp/>sensors,<sp/>and<sp/>only<sp/>for<sp/>a<sp/>specific<sp/>type<sp/>of<sp/>dataset</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>method<sp/>takes<sp/>a<sp/>dafPersistance.Butler<sp/>corresponding<sp/>to<sp/>a<sp/>repository<sp/>in<sp/>which<sp/>a<sp/>full<sp/>eotest<sp/>run<sp/>has</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>been<sp/>taken<sp/>and<sp/>ingested,<sp/>and<sp/>runs<sp/>each<sp/>of<sp/>the<sp/>tasks<sp/>in<sp/>eotest<sp/>directly,<sp/>allowing<sp/>for<sp/>bitwise<sp/>comparison</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>with<sp/>results<sp/>given<sp/>by<sp/>the<sp/>camera<sp/>team.</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>See<sp/>http://ls.st/ldm-151<sp/>Chapter<sp/>4,<sp/>Calibration<sp/>Products<sp/>Production<sp/>for<sp/>further<sp/>details</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>regarding<sp/>the<sp/>inputs<sp/>and<sp/>outputs.</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a9fba251d45d3bb3076b08dfaca57971b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ConfigClass<sp/>=<sp/>CppTaskConfig</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>_DefaultName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a9aee21c0920345fb4145b76572ac9e6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a9aee21c0920345fb4145b76572ac9e6e" kindref="member">__init__</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>for<sp/>CppTask.</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calls<sp/>the<sp/>lsst.pipe.base.task.Task.__init__()<sp/>method,<sp/>then<sp/>sets<sp/>up<sp/>the</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>various<sp/>subTasks<sp/>for<sp/>calibration<sp/>products<sp/>production<sp/>task.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args<sp/>:</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>list<sp/>of<sp/>positional<sp/>arguments<sp/>passed<sp/>on<sp/>to<sp/>the<sp/>Task<sp/>constructor</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**kwargs<sp/>:</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>dictionary<sp/>of<sp/>keyword<sp/>arguments<sp/>passed<sp/>on<sp/>to<sp/>the<sp/>Task<sp/>constructor</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeBase.CmdLineTask.__init__(self,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>One<sp/>of<sp/>these<sp/>for<sp/>each<sp/>pexConfig.ConfigurableField</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;fe55&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;readNoise&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;brightPixels&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;darkPixels&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;traps&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;cte&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;flatPair&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.makeSubtask(</highlight><highlight class="stringliteral">&quot;ptc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>-<sp/>we<sp/>can&apos;t<sp/>currently<sp/>call<sp/>validate<sp/>as<sp/>the<sp/>configs<sp/>are<sp/>NOT<sp/>valid<sp/>due<sp/>to<sp/>state<sp/>of<sp/>eotest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>so<sp/>no<sp/>call<sp/>to<sp/>self.config.validate()<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>it<sp/>*IS*<sp/>OK<sp/>to<sp/>call<sp/>both<sp/>validate()<sp/>and<sp/>freeze()<sp/>twice,<sp/>so<sp/>it&apos;s<sp/>OK<sp/>if<sp/>the<sp/>argParser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>makes<sp/>this<sp/>call<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.config.freeze()</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Do<sp/>we<sp/>want<sp/>to<sp/>switch<sp/>to<sp/>the<sp/>better-named<sp/>logger<sp/>below<sp/>or<sp/>use<sp/>the<sp/>one<sp/>we<sp/>get<sp/>from<sp/>cmdLineTask?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>e.g.<sp/>using<sp/>self.log<sp/>=<sp/>lsstLog.Log.getLogger(&quot;ip.cpp.cppTask&quot;)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_getMaskFiles(self,<sp/>path,<sp/>ccd):</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Get<sp/>all<sp/>available<sp/>eotest<sp/>mask<sp/>files<sp/>for<sp/>a<sp/>given<sp/>ccd.</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Each<sp/>stage<sp/>of<sp/>the<sp/>processing<sp/>generates<sp/>more<sp/>mask<sp/>files,<sp/>so<sp/>this<sp/>allows<sp/>each<sp/>to<sp/>be<sp/>picked<sp/>up</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>more<sp/>and<sp/>more<sp/>tests<sp/>run,<sp/>and<sp/>saves<sp/>having<sp/>to<sp/>have<sp/>clever<sp/>logic<sp/>for<sp/>if<sp/>some<sp/>tasks<sp/>fail.</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>:<sp/>string</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>on<sp/>which<sp/>to<sp/>find<sp/>the<sp/>mask<sp/>files</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccd<sp/>:<sp/>string</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name/identifier<sp/>of<sp/>the<sp/>CCD</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>:<sp/>list/tuple</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>mask<sp/>files,<sp/>or<sp/>an<sp/>empty<sp/>tuple<sp/>if<sp/>none<sp/>are<sp/>found</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>+<sp/>ccd<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;*mask*&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>glob.glob(os.path.join(path,<sp/>pattern))</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maskFiles<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(maskFiles)<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>eotest<sp/>wants<sp/>an<sp/>empty<sp/>tuple<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_cleanupEotest(self,<sp/>path):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Delete<sp/>all<sp/>the<sp/>medianed<sp/>files<sp/>left<sp/>behind<sp/>after<sp/>eotest<sp/>has<sp/>run.</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Running<sp/>eotest<sp/>generates<sp/>a<sp/>lot<sp/>of<sp/>interim<sp/>medianed<sp/>files,<sp/>so<sp/>this<sp/>just<sp/>cleans<sp/>them<sp/>up.</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>:<sp/>string</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>on<sp/>which<sp/>to<sp/>delete<sp/>all<sp/>the<sp/>eotest<sp/>medianed<sp/>files.</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>filename<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>glob.glob(os.path.join(path,<sp/></highlight><highlight class="stringliteral">&apos;*median*&apos;</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(filename)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_gainPropSetToDict(self,<sp/>pSet):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Translator<sp/>for<sp/>the<sp/>persisted<sp/>gain<sp/>values.</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eotest<sp/>wants<sp/>an<sp/>{amp:<sp/>gain}<sp/>dictionary<sp/>with<sp/>integer<sp/>keys<sp/>for<sp/>the<sp/>amps.</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>we<sp/>persist<sp/>dafBase.propertySets<sp/>these<sp/>only<sp/>take<sp/>strings<sp/>for<sp/>keys,</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>the<sp/>provided<sp/>.toDict()<sp/>method<sp/>won&apos;t<sp/>do,<sp/>so<sp/>here<sp/>we<sp/>provide<sp/>an<sp/>extra</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer<sp/>of<sp/>translation<sp/>to<sp/>keep<sp/>eotest<sp/>happy.</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSet<sp/>:<sp/>daf.base.PropertySet</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PropertySet<sp/>to<sp/>be<sp/>translated<sp/>to<sp/>an<sp/>integer-keyed<sp/>dictionary</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{int(amp):<sp/>gain<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>gain<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pSet.toDict().items()}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1af5bf048af7b633fc73738d1a6c3973bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1af5bf048af7b633fc73738d1a6c3973bd" kindref="member">testMethod</ref>(self):<sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>XXX<sp/>remove<sp/>this<sp/>whole<sp/>method,<sp/>just<sp/>useful<sp/>for<sp/>debugging/dev<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;TODO:<sp/>Remove<sp/>this<sp/>docstring<sp/>that<sp/>only<sp/>exists<sp/>to<sp/>remove<sp/>flake8<sp/>error.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(</highlight><highlight class="stringliteral">&quot;Test<sp/>warning<sp/>message&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(self.config.requireAllEOTests)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>@pipeBase.timeMethod<sp/>#xxx<sp/>re-include<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a9da7f63d3750528eb2f47b292b9176e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a9da7f63d3750528eb2f47b292b9176e8" kindref="member">runEotestDirect</ref>(self,<sp/>butler,<sp/>run=None):</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generate<sp/>calibration<sp/>products<sp/>using<sp/>eotest<sp/>algorithms.</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generate<sp/>all<sp/>calibration<sp/>products<sp/>possible<sp/>using<sp/>the<sp/>vanilla<sp/>eotest<sp/>implementation,</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>given<sp/>a<sp/>butler<sp/>for<sp/>a<sp/>TS8<sp/>(raft-test)<sp/>repo.<sp/>It<sp/>can<sp/>contain<sp/>multiple<sp/>runs,<sp/>but<sp/>must<sp/>correspond<sp/>to</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>a<sp/>single<sp/>raft/RTM.</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Run<sp/>all<sp/>eotest<sp/>tasks<sp/>possible,<sp/>using<sp/>the<sp/>butler<sp/>to<sp/>gather<sp/>the<sp/>data</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Write<sp/>outputs<sp/>in<sp/>eotest<sp/>format</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>order<sp/>to<sp/>replicate<sp/>the<sp/>canonical<sp/>eotest<sp/>analysis,<sp/>the<sp/>tasks<sp/>should<sp/>be<sp/>run<sp/>in<sp/>a<sp/>specific<sp/>order.</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>given/defined<sp/>in<sp/>the<sp/>&quot;Steps&quot;<sp/>section<sp/>here:</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://lsst-camera.slac.stanford.edu/eTraveler/exp/LSST-CAMERA/</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayProcess.jsp?processPath=1179</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>is<sp/>replicated<sp/>here<sp/>for<sp/>conveniece:</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>55Fe<sp/>Analysis</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>CCD<sp/>Read<sp/>Noise<sp/>Analysis</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Bright<sp/>Defects<sp/>Analysis</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Dark<sp/>Defects<sp/>Analysis</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Traps<sp/>Finding</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Dark<sp/>Current<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>-<sp/>will<sp/>not<sp/>be<sp/>implemented<sp/>here</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Charge<sp/>Transfer<sp/>Efficiencies</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Photo-response<sp/>analysis<sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>-<sp/>will<sp/>not<sp/>be<sp/>implemented<sp/>here</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Flat<sp/>Pairs<sp/>Analysis</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Photon<sp/>Transfer<sp/>Curve</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Quantum<sp/>Efficiency<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>-<sp/>will<sp/>not<sp/>be<sp/>implemented<sp/>here</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>tasks<sp/>that<sp/>exist<sp/>in<sp/>the<sp/>eotest<sp/>package<sp/>but<sp/>aren&apos;t<sp/>mentioned<sp/>on<sp/>the<sp/>above<sp/>link:</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>linearityTask()</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>fe55CteTask()</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>eperTask()</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>crosstalkTask()</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>persistenceTask()</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>TODO:<sp/>For<sp/>each<sp/>eotest<sp/>task,<sp/>find<sp/>out<sp/>what<sp/>the<sp/>standard<sp/>raft<sp/>testing<sp/>does<sp/>for<sp/>the<sp/>optional<sp/>params.</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e.<sp/>many<sp/>have<sp/>optional<sp/>params<sp/>for<sp/>gains,<sp/>bias-frames<sp/>etc<sp/>-<sp/>if<sp/>we<sp/>want<sp/>bitwise<sp/>identicallity<sp/>then<sp/>we</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>need<sp/>to<sp/>know<sp/>what<sp/>is<sp/>typically<sp/>provided<sp/>to<sp/>these<sp/>tasks<sp/>when<sp/>the<sp/>camera<sp/>team<sp/>runs<sp/>this<sp/>code.</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>can<sp/>probably<sp/>be<sp/>worked<sp/>out<sp/>from<sp/>https://github.com/lsst-camera-dh/lcatr-harness</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>it<sp/>sounds<sp/>like<sp/>Jim<sp/>Chiang<sp/>doesn&apos;t<sp/>recommend<sp/>trying<sp/>to<sp/>do<sp/>that.</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>butler<sp/>:<sp/>daf.persistence.butler</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Butler<sp/>for<sp/>the<sp/>repo<sp/>containg<sp/>the<sp/>eotest<sp/>data<sp/>to<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>:<sp/>string<sp/>or<sp/>int</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optional<sp/>run<sp/>number,<sp/>to<sp/>be<sp/>used<sp/>for<sp/>repos<sp/>containing<sp/>multiple<sp/>runs</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Running<sp/>eotest<sp/>routines<sp/>direct&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runs<sp/>=<sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(run,<sp/>int):</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>=<sp/>str(run)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(runs)<sp/>!=<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>run<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">#<sp/>lots<sp/>found<sp/>and<sp/>we<sp/>don&apos;t<sp/>know<sp/>which<sp/>one<sp/>to<sp/>choose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Butler<sp/>query<sp/>found<sp/>%s<sp/>for<sp/>runs.<sp/>eotest<sp/>datasets<sp/>must<sp/>have<sp/>a<sp/>run<sp/>numbers,<sp/>and&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>must<sp/>specify<sp/>which<sp/>run<sp/>to<sp/>use<sp/>if<sp/>a<sp/>respoitory<sp/>contains<sp/>multiple<sp/>runs.&quot;</highlight><highlight class="normal">%runs)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>run<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>run<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs:<sp/><sp/></highlight><highlight class="comment">#<sp/>Could<sp/>be<sp/>specifying<sp/>one<sp/>of<sp/>many,<sp/>or<sp/>one<sp/>of<sp/>one<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Butler<sp/>query<sp/>found<sp/>%s<sp/>for<sp/>runs,<sp/>but<sp/>the<sp/>run<sp/>specified<sp/>(%s)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;was<sp/>not<sp/>among<sp/>them.&quot;</highlight><highlight class="normal">%(runs,<sp/>run))</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>run<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>know<sp/>it&apos;s<sp/>OK<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>=<sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">])[0]</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>runs<sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>have<sp/>run<sp/>defined<sp/>now,<sp/>so<sp/>remove<sp/>this<sp/>to<sp/>avoid<sp/>potential<sp/>confusion<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>line<sp/>feels<sp/>very<sp/>hacky,<sp/>but<sp/>seems<sp/>to<sp/>be<sp/>best<sp/>way<sp/>to<sp/>get<sp/>the<sp/>root<sp/>from<sp/>the<sp/>butler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outdir<sp/>=<sp/>os.path.join(butler._repos._inputs[0].repoArgs.root,<sp/></highlight><highlight class="stringliteral">&apos;eotest_output&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(outdir):</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkdir(outdir)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccds<sp/>=<sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imTypes<sp/>=<sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testTypes<sp/>=<sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doFe55:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe55TaskDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FE55&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FE55&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>Fe55<sp/>pixel<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;FE55&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes:<sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Remove<sp/>not<sp/>to<sp/>test<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Fe55<sp/>tests<sp/>found.<sp/>Available<sp/>data:<sp/>%s&quot;</highlight><highlight class="normal">%testTypes</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>Fe55<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fe55Filenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],<sp/>dataId=fe55TaskDataId)]</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;Fe55Task:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(fe55Filenames)))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains<sp/>=<sp/>self.fe55.run(sensor_id=ccd,<sp/>infiles=fe55Filenames,<sp/>mask_files=maskFiles,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bias_frame=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fe55_catalog=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>minClustersPerAmp=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chiprob_min=0.1,<sp/>accuracy_req=0,<sp/>oscan_fit_order=1)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gainsPropSet<sp/>=<sp/>dafBase.PropertySet()</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>gain<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gains.items():<sp/><sp/></highlight><highlight class="comment">#<sp/>there<sp/>is<sp/>no<sp/>propSet.fromDict()<sp/>method<sp/>so<sp/>make<sp/>like<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gainsPropSet.addDouble(str(amp),<sp/>gain)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>butler.put(gainsPropSet,<sp/></highlight><highlight class="stringliteral">&apos;eotest_gain&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd,<sp/></highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run})</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>fe55TaskDataId</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>validate<sp/>the<sp/>results<sp/>above,<sp/>and/or<sp/>change<sp/>code<sp/>to<sp/>(be<sp/>able<sp/>to)<sp/>always<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>over<sp/>all<sp/>files<sp/>instead<sp/>of<sp/>stopping<sp/>at<sp/>the<sp/>&quot;required<sp/>accuracy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>will<sp/>require<sp/>making<sp/>changes<sp/>to<sp/>the<sp/>eotest<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doReadNoise:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.readNoise.config.output_dir<sp/>=<sp/>&apos;/home/mfl/thisisbad/&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>note<sp/>that<sp/>LCA-10103<sp/>defines<sp/>the<sp/>Fe55<sp/>bias<sp/>frames<sp/>as<sp/>the<sp/>ones<sp/>to<sp/>use<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>readNoise<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noiseTaskDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FE55&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;BIAS&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;FE55&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;BIAS&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>imTypes):</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Required<sp/>data<sp/>for<sp/>readNoise<sp/>unavailable.<sp/>Available<sp/>data:\</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\ntestTypes:<sp/>%s\nimageTypes:<sp/>%s&quot;</highlight><highlight class="normal">%(testTypes,<sp/>imTypes)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>Fe55<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noiseFilenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataId=noiseTaskDataId)]</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;Fe55Task:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(noiseFilenames)))</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a138996ff25e75e2f614c839869f89940" kindref="member">_gainPropSetToDict</ref>(butler.get(</highlight><highlight class="stringliteral">&apos;eotest_gain&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd,<sp/></highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run}))</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.readNoise.run(sensor_id=ccd,<sp/>bias_files=noiseFilenames,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains=gains,<sp/>mask_files=maskFiles)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>noiseTaskDataId</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doBrightPixels:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.brightTask.ConfigClass.output_dir<sp/>=<sp/>outdir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>brightTask<sp/>=<sp/>sensorTest.brightPixelsTask.BrightPixelsTask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>brightTaskconfig<sp/>=<sp/>sensorTest.brightPixelsTask.BrightPixelsConfig()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>brightTaskconfig.output_dir<sp/>=<sp/>outdir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>brightTask.config<sp/>=<sp/>brightTaskconfig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>bright<sp/>pixel<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brightTaskDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;DARK&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;DARK&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;DARK&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes:<sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Remove<sp/>not<sp/>to<sp/>test<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>dark<sp/>tests<sp/>found.<sp/>Available<sp/>data:<sp/>%s&quot;</highlight><highlight class="normal">%testTypes</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>bright<sp/>pixel<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>darkFilenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataId=brightTaskDataId)]</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;BrigtTask:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(darkFilenames)))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a138996ff25e75e2f614c839869f89940" kindref="member">_gainPropSetToDict</ref>(butler.get(</highlight><highlight class="stringliteral">&apos;eotest_gain&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd,<sp/></highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run}))</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.brightPixels.run(sensor_id=ccd,<sp/>dark_files=darkFilenames,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_files=maskFiles,<sp/>gains=gains,<sp/>bias_frame=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>brightTaskDataId</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doDarkPixels:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.darkTask.ConfigClass.output_dir<sp/>=<sp/>outdir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>darkTask<sp/>=<sp/>sensorTest.darkPixelsTask.DarkPixelsTask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>darkTaskconfig<sp/>=<sp/>sensorTest.darkPixelsTask.DarkPixelsConfig()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>darkTaskconfig.output_dir<sp/>=<sp/>outdir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>darkTask.config<sp/>=<sp/>darkTaskconfig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>dark<sp/>pixel<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>darkTaskDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SFLAT_500&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;SFLAT_500&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>superflats<sp/>found.<sp/>Available<sp/>data:<sp/>%s&quot;</highlight><highlight class="normal">%testTypes</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>dark<sp/>pixel<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sflatFilenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataId=darkTaskDataId)]</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;DarkTask:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(sflatFilenames)))</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.darkPixels.run(sensor_id=ccd,<sp/>sflat_files=sflatFilenames,<sp/>mask_files=maskFiles)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>darkTaskDataId</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doTraps:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>trap<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trapTaskDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;TRAP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;PPUMP&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;TRAP&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;PPUMP&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>imTypes):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>pocket<sp/>pumping<sp/>exposures<sp/>found.<sp/>Available<sp/>data:<sp/>%s&quot;</highlight><highlight class="normal">%testTypes</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>trap<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trapFilenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],<sp/>dataId=trapTaskDataId)]</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(trapFilenames)<sp/>!=<sp/>1:<sp/><sp/></highlight><highlight class="comment">#<sp/>eotest<sp/>can&apos;t<sp/>handle<sp/>more<sp/>than<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.fatal(</highlight><highlight class="stringliteral">&quot;Trap<sp/>Task:<sp/>Found<sp/>more<sp/>than<sp/>one<sp/>ppump<sp/>trap<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">%trapFilenames)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;Trap<sp/>Task:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(trapFilenames)))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a138996ff25e75e2f614c839869f89940" kindref="member">_gainPropSetToDict</ref>(butler.get(</highlight><highlight class="stringliteral">&apos;eotest_gain&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd,<sp/></highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run}))</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.traps.run(sensor_id=ccd,<sp/>pocket_pumped_file=trapFilenames[0],</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_files=maskFiles,<sp/>gains=gains)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>trapTaskDataId</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doCTE:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>CTE<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cteTaskDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SFLAT_500&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;SFLAT_500&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>superflats<sp/>found.<sp/>Available<sp/>data:<sp/>%s&quot;</highlight><highlight class="normal">%testTypes</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>CTE<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sflatFilenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],<sp/>dataId=cteTaskDataId)]</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;CTETask:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(sflatFilenames)))</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.cte.run(sensor_id=ccd,<sp/>superflat_files=sflatFilenames,<sp/>mask_files=maskFiles)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>cteTaskDataId</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doFlatPair:</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>flatPair<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatPairDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>dataset<sp/>for<sp/>flat_pairs<sp/>found.<sp/>Available<sp/>data:<sp/>%s&quot;</highlight><highlight class="normal">%testTypes</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>flatPair<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatPairFilenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataId=flatPairDataId)]</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>eotest<sp/>needs<sp/>the<sp/>original<sp/>filenames<sp/>as<sp/>that<sp/>is<sp/>the<sp/>only<sp/>place<sp/>the<sp/>flat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pair-number<sp/>is<sp/>kept,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>resolve<sp/>links<sp/>and<sp/>pass<sp/>in<sp/>the<sp/>*original*<sp/>paths<sp/>here<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Also,<sp/>there<sp/>is<sp/>no<sp/>&quot;flat-pair&quot;<sp/>test<sp/>type,<sp/>so<sp/>all<sp/>FLAT/FLAT<sp/>imType/testType<sp/>will<sp/>appear<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>so<sp/>we<sp/>need<sp/>to<sp/>filter<sp/>these<sp/>for<sp/>only<sp/>the<sp/>pair<sp/>acquisitions<sp/>(as<sp/>the<sp/>eotest<sp/>code<sp/>looks<sp/>like<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>isn&apos;t<sp/>totally<sp/>thorough<sp/>on<sp/>rejecting<sp/>the<sp/>wrong<sp/>types<sp/>of<sp/>data<sp/>here)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>adding<sp/>a<sp/>translator<sp/>to<sp/>obs_comCam<sp/>and<sp/>ingesting<sp/>this<sp/>would<sp/>allow<sp/>this<sp/>to<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>by<sp/>the<sp/>butler<sp/>instead<sp/>of<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatPairFilenames<sp/>=<sp/>[os.path.realpath(_)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>flatPairFilenames<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.realpath(_).find(</highlight><highlight class="stringliteral">&apos;flat1&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.realpath(_).find(</highlight><highlight class="stringliteral">&apos;flat2&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1]</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>flatPairFilenames:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;No<sp/>flatPair<sp/>files<sp/>found.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;FlatPairTask:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(flatPairFilenames)))</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a138996ff25e75e2f614c839869f89940" kindref="member">_gainPropSetToDict</ref>(butler.get(</highlight><highlight class="stringliteral">&apos;eotest_gain&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd,<sp/></highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run}))</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.flatPair.run(sensor_id=ccd,<sp/>infiles=flatPairFilenames,<sp/>mask_files=maskFiles,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains=gains,<sp/>max_pd_frac_dev=self.config.flatPairMaxPdFracDev)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>flatPairDataId</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.doPTC:</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>PTC<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptcDataId<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run,<sp/></highlight><highlight class="stringliteral">&apos;testType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;imageType&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ccd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccds:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;FLAT&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>testTypes:</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>dataset<sp/>for<sp/>flat_pairs<sp/>found.<sp/>Available<sp/>data:<sp/>%s&quot;</highlight><highlight class="normal">%testTypes</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.config.requireAllEOTests:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(msg)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warn(msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nSkipping<sp/>PTC<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptcFilenames<sp/>=<sp/>[butler.get(</highlight><highlight class="stringliteral">&apos;raw_filename&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">:<sp/>visit,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd})[0][:-3]</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>visit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>butler.queryMetadata(</highlight><highlight class="stringliteral">&apos;raw&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;visit&apos;</highlight><highlight class="normal">],<sp/>dataId=ptcDataId)]</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>eotest<sp/>needs<sp/>the<sp/>original<sp/>filenames<sp/>as<sp/>that<sp/>is<sp/>the<sp/>only<sp/>place<sp/>the<sp/>flat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pair-number<sp/>is<sp/>kept,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>resolve<sp/>links<sp/>and<sp/>pass<sp/>in<sp/>the<sp/>*original*<sp/>paths<sp/>here<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Also,<sp/>there<sp/>is<sp/>no<sp/>&quot;flat-pair&quot;<sp/>test<sp/>type,<sp/>so<sp/>all<sp/>FLAT/FLAT<sp/>imType/testType<sp/>will<sp/>appear<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>so<sp/>we<sp/>need<sp/>to<sp/>filter<sp/>these<sp/>for<sp/>only<sp/>the<sp/>pair<sp/>acquisitions<sp/>(as<sp/>the<sp/>eotest<sp/>code<sp/>looks<sp/>like<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>isn&apos;t<sp/>totally<sp/>thorough<sp/>on<sp/>rejecting<sp/>the<sp/>wrong<sp/>types<sp/>of<sp/>data<sp/>here)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>adding<sp/>a<sp/>translator<sp/>to<sp/>obs_comCam<sp/>and<sp/>ingesting<sp/>this<sp/>would<sp/>allow<sp/>this<sp/>to<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>by<sp/>the<sp/>butler<sp/>instead<sp/>of<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptcFilenames<sp/>=<sp/>[os.path.realpath(_)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ptcFilenames<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.realpath(_).find(</highlight><highlight class="stringliteral">&apos;flat1&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.realpath(_).find(</highlight><highlight class="stringliteral">&apos;flat2&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>-1]</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ptcFilenames:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;No<sp/>flatPair<sp/>files<sp/>found&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.trace(</highlight><highlight class="stringliteral">&quot;PTCTask:<sp/>Processing<sp/>%s<sp/>with<sp/>%s<sp/>files&quot;</highlight><highlight class="normal">%(ccd,<sp/>len(ptcFilenames)))</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskFiles<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a36ffa686cc9ce5bdebaa026fe244a497" kindref="member">_getMaskFiles</ref>(outdir,<sp/>ccd)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a138996ff25e75e2f614c839869f89940" kindref="member">_gainPropSetToDict</ref>(butler.get(</highlight><highlight class="stringliteral">&apos;eotest_gain&apos;</highlight><highlight class="normal">,<sp/>dataId={</highlight><highlight class="stringliteral">&apos;ccd&apos;</highlight><highlight class="normal">:<sp/>ccd,<sp/></highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">:<sp/>run}))</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ptc.run(sensor_id=ccd,<sp/>infiles=ptcFilenames,<sp/>mask_files=maskFiles,<sp/>gains=gains)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>ptcDataId</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1cpp_1_1cpp_task_1_1_cpp_task_1a00a9b7cb7210e16c3a729bcac495e64e" kindref="member">_cleanupEotest</ref>(outdir)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Finished<sp/>running<sp/>EOTest&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="python/lsst/ip/cpp/cppTask.py"/>
  </compounddef>
</doxygen>
